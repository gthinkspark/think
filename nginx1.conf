#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;
		root   /data/nginx;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            index  index.html index.htm;
        }
		
		
		       location /img {
		if ($uri ~* "^/img/(.+)_(\d+)x(\d+)(.*)" ) {
                  	set $width  $2;                       #指定宽
                  	set $height $3;                       #指定高
                  	set $image_path $1$4; 		      #文件名称
                  	set $demins "_$2x$3";

		}	

		set $image_uri image_resize/$image_path?width=$width&height=$height;

          	if (!-f $request_filename) {
                 	proxy_pass http://127.0.0.1/$image_uri;       #没有缓存文件直接访问原文件
	                break;
          	}	
		
   	#	proxy_store on;
         	proxy_store    /data/nginx/site_cache/resize$demins/$image_path;       #缓存存储位置
          	proxy_store_access   user:rw  group:rw  all:r;        	#缓存文件权限
          	proxy_temp_path      /data/nginx/tmp; 			#缓存临时文件路径
          	proxy_set_header     Host $host;
	        proxy_set_header Via "yl2/nginx";
          	expires              7d;
         	access_log           off;
	}
	
	
		location /image_resize {
         	alias /data/nginx/img;
          	image_filter resize $arg_width $arg_height;   	#图片处理长宽
          	image_filter_jpeg_quality 75;		 	#图片处理质量
          	image_filter_buffer 2M;
   
	    }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


	
	
server {
listen 3298;
server_name web;
index index.html index.php index.html;
root /data/php;
location /{
try_files $uri $uri/ /index.php?$args;
}
location ~ ^(.+.php)(.*)$ {
fastcgi_split_path_info ^(.+.php)(.*)$;
include fastcgi.conf;
fastcgi_pass 127.0.0.1:9000;
fastcgi_index index.php;
fastcgi_param PATH_INFO $fastcgi_path_info;
}
}	


server {
listen 8000;
server_name yzmk_forum;
index index.html index.php index.html;
root /data/php/yzmk_forum;
location /{
try_files $uri $uri/ /index.php?$args;
}
location ~ ^(.+.php)(.*)$ {
fastcgi_split_path_info ^(.+.php)(.*)$;
include fastcgi.conf;
fastcgi_pass 127.0.0.1:9000;
fastcgi_index index.php;
fastcgi_param PATH_INFO $fastcgi_path_info;
}
}
	
	
server {
listen 8081;
server_name horse_forum;
index index.html index.php index.html;
root /data/php/horse_forum;
location /{
try_files $uri $uri/ /index.php?$args;
}
location ~ ^(.+.php)(.*)$ {
fastcgi_split_path_info ^(.+.php)(.*)$;
include fastcgi.conf;
fastcgi_pass 127.0.0.1:9000;
fastcgi_index index.php;
fastcgi_param PATH_INFO $fastcgi_path_info;
}
}






    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
